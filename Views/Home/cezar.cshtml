
<h1>@ViewData["Title"]</h1>
<h3 class="text-center">ROT1</h3>
<p>
    Самый легкий и один из самых известных классических шифров — шифр Цезаря отлично подойдет на роль аперитива.
    Шифр Цезаря относится к группе так называемых одноалфавитных шифров подстановки. При использовании шифров этой группы «каждый символ открытого текста заменяется на некоторый, фиксированный при данном ключе символ того же алфавита» wiki.

    Способы выбора ключей могут быть различны. В шифре Цезаря ключом служит произвольное число k, выбранное в интервале от 1 до 25. Каждая буква открытого текста заменяется буквой, стоящей на k знаков дальше нее в алфавите. К примеру, пусть ключом будет число 3. Тогда буква A английского алфавита будет заменена буквой D, буква B — буквой E и так далее.

    Для наглядности зашифруем слово HABRAHABR шифром Цезаря с ключом k=7. Построим таблицу подстановок:<br />

</p>
<br />
<img src="~/img/таблица.bmp" />
<br />
<p>
    И заменив каждую букву в тексте получим: C('HABRAHABR', 7) = 'OHIYHOHIY'.

    При расшифровке каждая буква заменяется буквой, стоящей в алфавите на k знаков раньше: D('OHIYHOHIY', 7) = 'HABRAHABR'.
</p>
<p>
    Малое пространство ключей (всего 25 вариантов) делает брут-форс самым эффективным и простым вариантом атаки.
    Для вскрытия необходимо каждую букву шифртекста заменить буквой, стоящей на один знак левее в алфавите. Если в результате этого не удалось получить читаемое сообщение, то необходимо повторить действие, но уже сместив буквы на два знака левее. И так далее, пока в результате не получится читаемый текст.
</p>


<br />
<h6>При онлайн передаче электронных документов (почтовая рассылка, скачивание с сайта и т.д.) в файле может сбиться кодировка. В результате вместо привычных слов, предложений и абзацев вы получаете последовательность непонятных символов. Так случается из-за того, что кодирование и декодирование информации происходит некорректно, и устройства отправителя и получателя просто не понимают друг друга. Чтобы расшифровать зашифрованный текст, обратитесь к нашему онлайн декодеру.</h6>

 @using (Html.BeginForm("cezar", "Home", FormMethod.Post))
    {
      
    
    
<div>
    <h3 style="text-align: center; margin-bottom: 30px;">Cryption</h3>
</div>
<div style="display: inline-flex;">
    <div>
    <div class="left">
                 <input class="textarea_form" type="text" name="clearText" />
    </div>

</div>
    <div style="margin-left: 50px;">
    <div class="right textarea_form">@TempData["EncryptedTextCeazar"]</div>
</div>
</div>
<input type="submit" class="decoder_button__1Mui8 classicButton button_abtn__3dZPL" name="submit" value="Encrypt" />

<h3 style="text-align: center; margin-bottom: 30px;">Decryption</h3>
<div style="display: inline-flex;">
    <div>
    <div class="left">
                 <input class="textarea_form" type="text" name="cipherText"  />
    </div>

</div>
    <div style="margin-left: 50px;">
    <div class="right textarea_form">@TempData["DecryptedTextCeazar"]</div>
</div>
</div>
<input type="submit" class="decoder_button__1Mui8 classicButton button_abtn__3dZPL" name="submit" value="Decrypt" />


}
@{
        TempData.Keep("EncryptedTextCeazar");
    }


<br />
<br />
<br />